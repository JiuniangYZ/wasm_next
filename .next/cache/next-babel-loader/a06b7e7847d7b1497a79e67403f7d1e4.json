{"ast":null,"code":"import * as wasm from './wasm_pack_bg.wasm';\nlet cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\n\n\nexport function greet() {\n  wasm.greet();\n}\nlet cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n/**\n*/\n\n\nexport const Cell = Object.freeze({\n  Dead: 0,\n  Alive: 1\n});\n/**\n*/\n\nexport class Universe {\n  static __wrap(ptr) {\n    const obj = Object.create(Universe.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n\n  free() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n\n    wasm.__wbg_universe_free(ptr);\n  }\n  /**\n  * @returns {Universe}\n  */\n\n\n  static new() {\n    var ret = wasm.universe_new();\n    return Universe.__wrap(ret);\n  }\n  /**\n  * @returns {string}\n  */\n\n\n  render() {\n    try {\n      wasm.universe_render(8, this.ptr);\n      var r0 = getInt32Memory0()[8 / 4 + 0];\n      var r1 = getInt32Memory0()[8 / 4 + 1];\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_free(r0, r1);\n    }\n  }\n  /**\n  * @returns {number}\n  */\n\n\n  cells() {\n    var ret = wasm.universe_cells(this.ptr);\n    return ret;\n  }\n\n}\nexport const __wbg_alert_35974494ee262f45 = function (arg0, arg1) {\n  alert(getStringFromWasm0(arg0, arg1));\n};\nexport const __wbindgen_throw = function (arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n};","map":{"version":3,"sources":["/Users/shaobozhang/my_codes/my_next/public/pkg/wasm_pack.js"],"names":["wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","greet","cachegetInt32Memory0","getInt32Memory0","Int32Array","Cell","Object","freeze","Dead","Alive","Universe","__wrap","obj","create","prototype","free","__wbg_universe_free","new","ret","universe_new","render","universe_render","r0","r1","__wbindgen_free","cells","universe_cells","__wbg_alert_35974494ee262f45","arg0","arg1","alert","__wbindgen_throw","Error"],"mappings":"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","sourcesContent":["import * as wasm from './wasm_pack_bg.wasm';\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport function greet() {\n    wasm.greet();\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport const Cell = Object.freeze({ Dead:0,Alive:1, });\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    * @returns {Universe}\n    */\n    static new() {\n        var ret = wasm.universe_new();\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    render() {\n        try {\n            wasm.universe_render(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        var ret = wasm.universe_cells(this.ptr);\n        return ret;\n    }\n}\n\nexport const __wbg_alert_35974494ee262f45 = function(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"]},"metadata":{},"sourceType":"module"}