{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _jsxFileName = \"/Users/shaobozhang/my_codes/my_next/pages/index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport * as BABYLON from 'babylonjs';\nimport \"../style/index.css\";\nimport dynamic from 'next/dynamic';\nimport '../style/page_index.css';\nimport Ske from '../layout/Ske';\nimport { inject, observer } from \"mobx-react\";\nvar RustComponent = dynamic({\n  loader: function loader() {\n    return _regeneratorRuntime.async(function loader$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", function () {\n              return __jsx(Ske, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 15\n                },\n                __self: this\n              }, __jsx(Juicy, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 16\n                },\n                __self: this\n              }));\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n});\nvar Juicy = (_dec = inject('store'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Juicy, _React$Component);\n\n  function Juicy(props) {\n    var _this;\n\n    _classCallCheck(this, Juicy);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Juicy).call(this, props));\n\n    _this.draw2canvas = function (file, canvEle) {\n      var shadow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      console.log('here');\n      var pic = document.createElement('img');\n      pic.src = window.URL.createObjectURL(file);\n\n      pic.onload = function () {\n        canvEle.width = pic.width;\n        canvEle.height = pic.height;\n        canvEle.getContext('2d').drawImage(pic, 0, 0);\n\n        if (shadow != null) {\n          shadow.width = pic.width;\n          shadow.height = pic.height;\n          shadow.getContext('2d').drawImage(pic, 0, 0);\n        }\n      };\n    };\n\n    _this.createTexture = function (scene) {\n      //尝试创建材质\n      var tex = new BABYLON.StandardMaterial('mt', scene);\n      tex.emissiveColor = new BABYLON.Color3(1, 0, 0); //红色 emmissive 代表本身的颜色 RGB\n\n      tex.diffuseColor = new BABYLON.Color3(0, 1, 0); //绿色 漫反射\n\n      tex.specularColor = new BABYLON.Color3(0, 0, 1); //蓝色 镜面反射\n\n      return tex;\n    };\n\n    _this.createScene = function (eng, canvas) {\n      var scene = new BABYLON.Scene(eng);\n      var camera = new BABYLON.FreeCamera('camera1', new BABYLON.Vector3(10, 10, 0), scene); //let camera =  new BABYLON.ArcRotateCamera('c2',Math.PI/2, 0, 10,new BABYLON.Vector3.Zero(),scene);\n\n      camera.setTarget(new BABYLON.Vector3(0, 0, 0)); //设定你要朝向哪个方向\n\n      camera.attachControl(canvas, true); //让你可以控制\n      //camera.setPosition(new BABYLON.Vector3(0,0,10))\n      //camera.target=new BABYLON.Vector3(0,0,0);\n      // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\n\n      var light = new BABYLON.PointLight('light1', new BABYLON.Vector3(0, 5, 0), scene);\n      light.diffuse = new BABYLON.Color3(1, 1, 1);\n      var ground = BABYLON.MeshBuilder.CreateGround('jude', {\n        width: 8,\n        height: 8\n      });\n      ground.material = _this.createTexture(); //let light2 = new BABYLON.SpotLight('s1',)\n      //let light2  = new BABYLON.PointLight('l2',new BABYLON.Vector3(0,5,0),scene);\n      //BABYLON.MeshBuilder.CreateSphere(\"sphere\", {}, scene).position=new BABYLON.Vector3(0,0,2); //default sphere\n      //BABYLON.MeshBuilder.CreateSphere(\"sphere\", {}, scene).position=new BABYLON.Vector3(2,0,2); //default sphere\n      //sphere.position=new BABYLON.Vector3(0,0,0)\n      //var myPlane = BABYLON.MeshBuilder.CreatePlane(\"myPlane\", {width: 2, height: 2, sourcePlane: new BABYLON.Plane(1,1,0,0) }, scene);\n      // Create a built-in \"sphere\" shape; its constructor takes 6 params: name, segment, diameter, scene, updatable, sideOrientation\n      // let sphere = BABYLON.Mesh.CreateSphere('sphere1', 16, 2, scene, false, BABYLON.Mesh.FRONTSIDE);\n      // Move the sphere upward 1/2 of its height\n      // sphere.position.y = 1;\n      // Create a built-in \"ground\" shape; its constructor takes 6 params : name, width, height, subdivision, scene, updatable\n      // let ground = BABYLON.Mesh.CreateGround('ground1', 6, 6, 2, scene, false);\n\n      return scene;\n    };\n\n    _this.canvasRef = React.createRef();\n    _this.canvasShadow = React.createRef();\n    return _this;\n  }\n\n  _createClass(Juicy, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"index_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        id: \"canvas_wrapper\",\n        width: 1000,\n        height: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(\"canvas\", {\n        ref: this.canvasRef,\n        width: 1000,\n        height: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), __jsx(\"canvas\", {\n        ref: this.canvasShadow,\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), __jsx(\"img\", {\n        id: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('canvas!', this.canvasRef);\n      console.log(this.props.www);\n      console.log(this.props.mmm);\n      window.__shadow = this.canvasShadow.current;\n      window.__canvas = this.canvasRef.current;\n      var _ = this.canvasRef.current;\n      var eng = new BABYLON.Engine(_, true, {\n        preserveDrawingBuffer: true,\n        stencil: true\n      });\n      var scene = this.createScene(eng, _);\n      eng.runRenderLoop(function () {\n        scene.render();\n      });\n    }\n  }]);\n\n  return Juicy;\n}(React.Component), _temp)) || _class) || _class);\nexport default Juicy;","map":{"version":3,"sources":["/Users/shaobozhang/my_codes/my_next/pages/index.jsx"],"names":["React","Link","BABYLON","dynamic","Ske","inject","observer","RustComponent","loader","Juicy","props","draw2canvas","file","canvEle","shadow","console","log","pic","document","createElement","src","window","URL","createObjectURL","onload","width","height","getContext","drawImage","createTexture","scene","tex","StandardMaterial","emissiveColor","Color3","diffuseColor","specularColor","createScene","eng","canvas","Scene","camera","FreeCamera","Vector3","setTarget","attachControl","light","PointLight","diffuse","ground","MeshBuilder","CreateGround","material","canvasRef","createRef","canvasShadow","display","www","mmm","__shadow","current","__canvas","_","Engine","preserveDrawingBuffer","stencil","runRenderLoop","render","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link';\nimport { Upload, message, Button } from 'antd';\nimport * as BABYLON from 'babylonjs'\nimport \"../style/index.css\"\nimport dynamic from 'next/dynamic'\nimport '../style/page_index.css'\nimport Ske from '../layout/Ske'\nimport { inject, observer } from \"mobx-react\"\nconst RustComponent = dynamic({\n  loader: async () => {\n    // let cc = await import('../public/pkg/wasm_pack.js')\n    // let dd = await import('../public/pkg/wasm_pack_bg.wasm')\n    return () => (\n      <Ske>\n        <Juicy  />\n      </Ske>\n    )\n  },\n})\n@inject('store')\n@observer\nclass Juicy extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef();\n    this.canvasShadow = React.createRef();\n  }\n  draw2canvas=( file, canvEle, shadow=null )=>{\n    console.log('here')\n    let pic = document.createElement('img')\n    pic.src = window.URL.createObjectURL(file)\n    pic.onload=()=>{\n      canvEle.width = pic.width\n      canvEle.height= pic.height\n      canvEle.getContext('2d').drawImage(pic,0,0)   \n      if (shadow!=null){\n        shadow.width=pic.width\n        shadow.height=pic.height\n        shadow.getContext('2d').drawImage(pic,0,0)   \n      }\n    }\n  }\n  createTexture = (scene)=>{//尝试创建材质\n    let tex = new BABYLON.StandardMaterial('mt',scene)\n    tex.emissiveColor = new BABYLON.Color3(1,0,0) //红色 emmissive 代表本身的颜色 RGB\n    tex.diffuseColor = new BABYLON.Color3(0,1,0) //绿色 漫反射\n    tex.specularColor = new BABYLON.Color3(0,0,1) //蓝色 镜面反射\n    return tex\n  }\n  createScene=(eng,canvas)=>{\n    let scene = new BABYLON.Scene(eng);\n    let camera = new BABYLON.FreeCamera('camera1', new BABYLON.Vector3(10, 10, 0), scene);\n    //let camera =  new BABYLON.ArcRotateCamera('c2',Math.PI/2, 0, 10,new BABYLON.Vector3.Zero(),scene);\n    camera.setTarget(new BABYLON.Vector3(0,0,0));//设定你要朝向哪个方向\n    camera.attachControl(canvas, true);//让你可以控制\n    //camera.setPosition(new BABYLON.Vector3(0,0,10))\n    //camera.target=new BABYLON.Vector3(0,0,0);\n    // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\n    let light = new BABYLON.PointLight('light1', new BABYLON.Vector3(0, 5, 0), scene);\n    light.diffuse = new BABYLON.Color3(1,1,1);\n    let ground  = BABYLON.MeshBuilder.CreateGround('jude',{width:8,height:8});\n    ground.material = this.createTexture()\n    //let light2 = new BABYLON.SpotLight('s1',)\n    //let light2  = new BABYLON.PointLight('l2',new BABYLON.Vector3(0,5,0),scene);\n    //BABYLON.MeshBuilder.CreateSphere(\"sphere\", {}, scene).position=new BABYLON.Vector3(0,0,2); //default sphere\n    //BABYLON.MeshBuilder.CreateSphere(\"sphere\", {}, scene).position=new BABYLON.Vector3(2,0,2); //default sphere\n    //sphere.position=new BABYLON.Vector3(0,0,0)\n    //var myPlane = BABYLON.MeshBuilder.CreatePlane(\"myPlane\", {width: 2, height: 2, sourcePlane: new BABYLON.Plane(1,1,0,0) }, scene);\n    // Create a built-in \"sphere\" shape; its constructor takes 6 params: name, segment, diameter, scene, updatable, sideOrientation\n    // let sphere = BABYLON.Mesh.CreateSphere('sphere1', 16, 2, scene, false, BABYLON.Mesh.FRONTSIDE);\n    // Move the sphere upward 1/2 of its height\n    // sphere.position.y = 1;\n    // Create a built-in \"ground\" shape; its constructor takes 6 params : name, width, height, subdivision, scene, updatable\n    // let ground = BABYLON.Mesh.CreateGround('ground1', 6, 6, 2, scene, false);\n    return scene;\n  }\n  render() {\n    return (\n      <div id=\"index_wrapper\">\n        <div>\n          {/*<Upload\n            fileList={[]}\n            beforeUpload={file=>{\n              console.log(file)\n              this.draw2canvas(file, this.canvasRef.current, this.canvasShadow.current)\n            }}\n          >\n            <Button>\n              Upload ur Pic\n            </Button>\n          </Upload>*/}\n        </div>\n        <div id=\"canvas_wrapper\" width={1000} height={600}>\n          <canvas ref={this.canvasRef} width={1000} height={600}/>\n          <canvas ref={this.canvasShadow} style={{display:'none'}} />\n        </div>\n        <img id='shadow'/>\n      </div>\n    )\n  }\n  componentDidMount() {\n    console.log('canvas!',this.canvasRef)\n    console.log(this.props.www)\n    console.log(this.props.mmm)\n    window.__shadow = this.canvasShadow.current\n    window.__canvas = this.canvasRef.current\n    let _ = this.canvasRef.current\n    let eng = new BABYLON.Engine(_,true,{preserveDrawingBuffer:true,stencil:true})\n    let scene = this.createScene(eng,_);\n    eng.runRenderLoop(function(){\n      scene.render();\n    })\n  }\n}\nexport default Juicy"]},"metadata":{},"sourceType":"module"}