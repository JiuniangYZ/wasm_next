{"version":3,"file":"static/webpack/static/development/pages/index.js.72c7175433cc1a844eba.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link';\nimport { Upload, message, Button, List } from 'antd';\nimport * as BABYLON from 'babylonjs'\nimport \"../style/index.css\"\nimport dynamic from 'next/dynamic'\nimport '../style/page_index.css'\nimport Ske from '../layout/Ske'\nimport { inject, observer } from \"mobx-react\"\nconst RustComponent = dynamic({\n  loader: async () => {\n    // let cc = await import('../public/pkg/wasm_pack.js')\n    // let dd = await import('../public/pkg/wasm_pack_bg.wasm')\n    return () => (\n      <Ske>\n        <Juicy />\n      </Ske>\n    )\n  },\n})\n@inject('store')\n@observer\nclass Juicy extends React.Component {\n  constructor(props) {\n    super(props)\n    this.canvasRef = React.createRef();\n    this.canvasShadow = React.createRef();\n  }\n  draw2canvas = (file, canvEle, shadow = null) => {\n    console.log('here')\n    let pic = document.createElement('img')\n    pic.src = window.URL.createObjectURL(file)\n    pic.onload = () => {\n      canvEle.width = pic.width\n      canvEle.height = pic.height\n      canvEle.getContext('2d').drawImage(pic, 0, 0)\n      if (shadow != null) {\n        shadow.width = pic.width\n        shadow.height = pic.height\n        shadow.getContext('2d').drawImage(pic, 0, 0)\n      }\n    }\n  }\n  createTexture = (scene) => {//尝试创建材质\n    let tex = new BABYLON.StandardMaterial('mt', scene)\n    //tex.emissiveColor = new BABYLON.Color3(1,0,1) //红色 emmissive 代表本身的颜色 RGB\n    tex.diffuseColor = new BABYLON.Color3(1,0,0) //绿色 漫反射\n    //tex.specularColor = new BABYLON.Color3(0, 0, 1) //蓝色 镜面反射\n    // tex.ambientColor = new BABYLON.Color3(0,0,1)\n    window.__tex = tex;\n    return tex\n  }\n  createScene = (eng, canvas) => {\n    let scene = new BABYLON.Scene(eng);\n    //scene.ambientColor= new BABYLON.Color3(1,1,1);\n    let camera = new BABYLON.FreeCamera('camera1', new BABYLON.Vector3(10, 10, 0), scene);\n    //let camera =  new BABYLON.ArcRotateCamera('c2',Math.PI/2, 0, 10,new BABYLON.Vector3.Zero(),scene);\n    camera.setTarget(new BABYLON.Vector3(0, 0, 0));//设定你要朝向哪个方向\n    camera.attachControl(canvas, true);//让你可以控制\n    //camera.setPosition(new BABYLON.Vector3(0,0,10))\n    //camera.target=new BABYLON.Vector3(0,0,0);\n    // Create a basic light, aiming 0, 1, 0 - meaning, to the sky\n    {\n      let light = new BABYLON.PointLight('light1', new BABYLON.Vector3(0, 5, 0), scene);\n      light.diffuse = new BABYLON.Color3(1, 1, 0); //光的基本颜色\n      //light.specular = new BABYLON.Color3(0, 0, 1);\n    }\n    //light.specular = new BABYLON.Color3(1,1,1);\n    let ground = BABYLON.MeshBuilder.CreateGround('jude', { width: 8, height: 8 });\n    ground.material = this.createTexture()\n    //let light2 = new BABYLON.SpotLight('s1',)\n    //let light2  = new BABYLON.PointLight('l2',new BABYLON.Vector3(0,5,0),scene);\n    //BABYLON.MeshBuilder.CreateSphere(\"sphere\", {}, scene).position=new BABYLON.Vector3(0,0,2); //default sphere\n    //BABYLON.MeshBuilder.CreateSphere(\"sphere\", {}, scene).position=new BABYLON.Vector3(2,0,2); //default sphere\n    //sphere.position=new BABYLON.Vector3(0,0,0)\n    //var myPlane = BABYLON.MeshBuilder.CreatePlane(\"myPlane\", {width: 2, height: 2, sourcePlane: new BABYLON.Plane(1,1,0,0) }, scene);\n    // Create a built-in \"sphere\" shape; its constructor takes 6 params: name, segment, diameter, scene, updatable, sideOrientation\n    // let sphere = BABYLON.Mesh.CreateSphere('sphere1', 16, 2, scene, false, BABYLON.Mesh.FRONTSIDE);\n    // Move the sphere upward 1/2 of its height\n    // sphere.position.y = 1;\n    // Create a built-in \"ground\" shape; its constructor takes 6 params : name, width, height, subdivision, scene, updatable\n    // let ground = BABYLON.Mesh.CreateGround('ground1', 6, 6, 2, scene, false);\n    return scene;\n  }\n  render() {\n    return (\n      <div id=\"index_wrapper\">\n        <div>\n          {/*<Upload\n            fileList={[]}\n            beforeUpload={file=>{\n              console.log(file)\n              this.draw2canvas(file, this.canvasRef.current, this.canvasShadow.current)\n            }}\n          >\n            <Button>\n              Upload ur Pic\n            </Button>\n          </Upload>*/}\n        </div>\n        <div id=\"canvas_wrapper\" width={1000} height={600}>\n          <canvas ref={this.canvasRef} width={1000} height={600} />\n          <canvas ref={this.canvasShadow} style={{ display: 'none' }} />\n        </div>\n        <img id='shadow' />\n      </div>\n    )\n  }\n  componentDidMount() {\n    // console.log('canvas!', this.canvasRef)\n    // console.log(this.props.www)\n    // console.log(this.props.mmm)\n    // window.__shadow = this.canvasShadow.current\n    // window.__canvas = this.canvasRef.current\n    // let _ = this.canvasRef.current\n    // let eng = new BABYLON.Engine(_, true, { preserveDrawingBuffer: true, stencil: true })\n    // let scene = this.createScene(eng, _);\n    // eng.runRenderLoop(function () {\n    //   scene.render();\n    // })\n  }\n}\nexport default Juicy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA3DA;AACA;AAHA;AAIA;AACA;;;AAwDA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAlGA;AAoGA;;;;A","sourceRoot":""}